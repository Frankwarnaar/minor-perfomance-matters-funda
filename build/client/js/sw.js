serviceWorker={init(){this.bindEvents()},bindEvents(){self.addEventListener("install",n=>n.waitUntil(caches.open("funda-v1-core").then(n=>n.addAll(["/css/app.css","/js/bundle.js","/fonts/proximanova/proximanova-regular.woff2","/fonts/proximanova/proximanova-semibold.woff2","/manifest.json","/offline/"])).then(self.skipWaiting())));self.addEventListener("fetch",n=>{const e=n.request;if(e.mode==="navigate"){n.respondWith(fetch(e).then(n=>this.pages.cache(e,n)).catch(n=>this.pages.getCached(e)).catch(n=>this.coreFiles.fetch("/offline/")))}else{n.respondWith(fetch(e).catch(n=>this.coreFiles.fetch(e.url)).catch(n=>this.coreFiles.fetch("/offline/")))}})},coreFiles:{fetch(n){return caches.open("funda-v1-core").then(e=>e.match(n)).then(n=>n?n:Promise.reject())}},pages:{cache(n,e){const t=e.clone();caches.open("funda-v1-pages").then(e=>e.put(n,t));return e},getCached(n){return caches.open("funda-v1-pages").then(e=>e.match(n)).then(n=>n?n:Promise.reject())}}};serviceWorker.init();